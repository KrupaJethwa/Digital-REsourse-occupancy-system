@model Digital_Resource_Occupancy_System.Models.Student.StudentRegModel
@{
    Layout = null;
    var currentYear = DateTime.Now.Year;
    var Program = new List<string> { "BCA", "MCA", "BSCIT", "MSCIT" };
    var clgyears = Enumerable.Range(1, 4);
    var years = Enumerable.Range(currentYear - 10, 11).Select(y => y.ToString().Substring(2)).ToList();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>student Register</title>

    <!-- Load Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Load Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

    <style>
        body, html {
            height: 100%;
            margin: 0;
            background-color: white;
        }

        .bg-image {
            background-image: url('/images/c11.jpg');
            background-size: cover;
            background-position: center;
            height: 100vh;
        }

        .card {
            background-color: rgb(83, 122, 146);
            border-radius: 10px;
            padding: 50px;
            width: 100%;
            max-width: 450px;
        }

        .card-body {
            background-color: rgb(206, 216, 221);
            padding: 20px;
            border-radius: 20px;
        }

        .form-control {
            width: 100%;
            margin-bottom: 15px;
        }

        .rounded-pill {
            border-radius: 40px;
        }

        .shadow-sm {
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .text-primary {
            color: black;
        }

        .btn-primary {
            background-color: rgb(83, 122, 146);
            border-color: #337ab7;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 40px;
            width: 100%;
        }

            .btn-primary:hover {
                background-color: #23527c;
                border-color: #23527c;
            }

        .forgot-password {
            font-size: 14px;
            margin: 10px;
            display: block;
            text-align: right;
            font-family: 'Inter';
            font-weight: 300;
            color: black !important;
        }
    </style>
</head>
<body>

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6 d-none d-md-block bg-image"></div>
            <div class="col-md-6 d-flex justify-content-center align-items-center">
                <div class="card shadow-lg">
                    <div class="card-body">
                        <h3 class="display-7 text-center">Student Register</h3>
                        <p class="text-muted mb-4 text-center">Enter your credentials to register.</p>

                        <!-- Display Validation Errors if any -->
                        @if (ViewData.ModelState.Values.Any(v => v.Errors.Count > 0))
                        {
                            <div class="alert alert-danger">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </div>
                        }
                    <form action="Student_DBRegister" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()





                        <div class="form-group">
                            @Html.TextBoxFor(m => m.StudentID, new { @placeholder = "Student ID- 23MCA001", @class = "form-control rounded-pill border-0 shadow-sm px-4", required = "required" })
                            @Html.ValidationMessageFor(m => m.StudentID, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.TextBoxFor(m => m.StudentName, new { @placeholder = "Student Name", @class = "form-control rounded-pill border-0 shadow-sm px-4", required = "required" })
                            @Html.ValidationMessageFor(m => m.StudentName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.TextBoxFor(m => m.StudentEmail, new { @placeholder = "Email", @type = "email", @class = "form-control rounded-pill border-0 shadow-sm px-4", required = "required" })
                            @Html.ValidationMessageFor(m => m.StudentEmail, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.DropDownList("Program", new SelectList(Program), "Program", new { @class = "form-control rounded-pill border-0 shadow-sm px-2", required = "required" })
                            @Html.ValidationMessageFor(m => m.Program, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.DropDownList("CollageYear", new SelectList(clgyears), "CollageYear", new { @class = "form-control rounded-pill border-0 shadow-sm px-2", required = "required" })
                            @Html.ValidationMessageFor(m => m.CollageYear, "", new { @class = "text-danger" })
                        </div>



                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Sem, new { @placeholder = "Semester", @type = "number", @class = "form-control rounded-pill border-0 shadow-sm px-4", required = "required" })
                            @Html.ValidationMessageFor(m => m.Sem, "", new { @class = "text-danger" })
                        </div>

                       

                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Div, new { @placeholder = "Div", @type = "number", @class = "form-control rounded-pill border-0 shadow-sm px-4", required = "required" })
                            @Html.ValidationMessageFor(m => m.Div, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group password-container position-relative">




                            <div class="form-group">
                                <!-- Password field with eye toggle inside the input box -->
                                <div class="password-container position-relative">
                                    <input id="Password" type="password" name="Password"
                                           placeholder="Password" required class="form-control rounded-pill border-0 shadow-sm px-4" />
                                    <i class="bi bi-eye position-absolute top-50 end-0 translate-middle-y me-3" id="togglePasswordIcon1" style="cursor: pointer;" onclick="togglePassword('Password')"></i>
                                </div>
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <!-- Confirm Password field with eye toggle inside the input box -->
                                <div class="password-container position-relative">
                                    <input id="ConfirmPassword" type="password" name="ConfirmPassword"
                                           placeholder="Confirm Password" required class="form-control rounded-pill border-0 shadow-sm px-4" />
                                    <i class="bi bi-eye position-absolute top-50 end-0 translate-middle-y me-3" id="togglePasswordIcon2" style="cursor: pointer;" onclick="togglePassword('ConfirmPassword')"></i>
                                </div>
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <input type="file" name="signature" accept=".jpg,.jpeg,.png" id="signatureUpload" required class="form-control rounded-pill border-0 shadow-sm px-4" />
                                @Html.ValidationMessage("Signature", "", new { @class = "text-danger" })
                            </div>

                            <button type="submit" class="btn btn-primary rounded-pill shadow-sm">Register</button>
                    </form>

                        <button type="button" class="btn btn-primary rounded-pill shadow-sm mt-2"
                                onclick="window.location.href='/Student/StudentLogin'">
                            Already have an account? Login now!
                        </button>
                        <button type="button" class="btn btn-primary rounded-pill shadow-sm mt-2"
                                onclick="window.location.href='/Home/SelectPersonType'">
                            Back to select person type
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function togglePassword(inputId) {
            var passwordInput = document.getElementById(inputId);
            var icon = inputId === 'Password' ? document.getElementById("togglePasswordIcon1") : document.getElementById("togglePasswordIcon2");

            if (passwordInput.type === "password") {
                passwordInput.type = "text";
                icon.classList.remove("bi-eye");
                icon.classList.add("bi-eye-slash");
            } else {
                passwordInput.type = "password";
                icon.classList.remove("bi-eye-slash");
                icon.classList.add("bi-eye");
            }
        }

            document.getElementById('signatureUpload').addEventListener('change', function() {
            const file = this.files[0];
            const allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
            if (file && !allowedExtensions.exec(file.name)) {
                alert('Invalid file type. Please upload an image file (jpg, jpeg, or png).');
            this.value = ''; // Clear the input
            }
        });
    
    </script>

</body>
</html>
